char_data = [
    [0x3E, 0x51, 0x49, 0x45, 0x3E],
    [0x00, 0x42, 0x7F, 0x40, 0x00],
    [0x42, 0x61, 0x51, 0x49, 0x46],
    [0x21, 0x41, 0x45, 0x4B, 0x31],
    [0x18, 0x14, 0x12, 0x7F, 0x10],
    [0x27, 0x45, 0x45, 0x45, 0x39],
    [0x3C, 0x4A, 0x49, 0x49, 0x30],
    [0x01, 0x71, 0x09, 0x05, 0x03],
    [0x36, 0x49, 0x49, 0x49, 0x36],
    [0x06, 0x49, 0x49, 0x29, 0x1E],
    [0x7C, 0x12, 0x11, 0x12, 0x7C],
    [0x7F, 0x49, 0x49, 0x49, 0x31],
    [0x7F, 0x49, 0x49, 0x49, 0x36],
    [0x7F, 0x01, 0x01, 0x01, 0x01],
    [0x60, 0x3E, 0x21, 0x3F, 0x60],
    [0x7F, 0x49, 0x49, 0x49, 0x41],
    [0x77, 0x08, 0x7F, 0x08, 0x77],
    [0x22, 0x41, 0x49, 0x49, 0x36],
    [0x7F, 0x60, 0x18, 0x06, 0x7F],
    [0x7F, 0x60, 0x18, 0x06, 0x7F],
    [0x00, 0x7F, 0x18, 0x24, 0x43],
    [0x00, 0x78, 0x06, 0x01, 0x7E],
    [0x7F, 0x02, 0x0C, 0x02, 0x7F],
    [0x00, 0x7F, 0x18, 0x18, 0x7F],
    [0x3E, 0x41, 0x41, 0x41, 0x3E],
    [0x7F, 0x01, 0x01, 0x01, 0x7F],
    [0x7F, 0x09, 0x09, 0x09, 0x06],
    [0x3E, 0x41, 0x41, 0x41, 0x22],
    [0x01, 0x01, 0x7F, 0x01, 0x01],
    [0x47, 0x48, 0x48, 0x48, 0x3F],
    [0x1C, 0x22, 0x7F, 0x22, 0x1C],
    [0x63, 0x14, 0x08, 0x14, 0x63],
    [0x3F, 0x20, 0x20, 0x3F, 0xC0],
    [0x00, 0x0F, 0x08, 0x08, 0x7F],
    [0x7F, 0x40, 0x7F, 0x40, 0x7F],
    [0x7F, 0x40, 0x7F, 0x40, 0xFF],
    [0x00, 0x01, 0x7F, 0x48, 0x78],
    [0x7F, 0x48, 0x68, 0x00, 0x7F],
    [0x00, 0x00, 0x7F, 0x48, 0x78],
    [0x00, 0x49, 0x49, 0x49, 0x7F],
    [0x7F, 0x18, 0x7F, 0x41, 0x7F],
    [0x00, 0x4F, 0x29, 0x19, 0x7F],
    [0x00, 0x00, 0x00, 0x00, 0x00],
    [0x60, 0x60, 0x00, 0x00, 0x00],
    [0x00, 0xE0, 0x60, 0x00, 0x00],
    [0x00, 0x00, 0x00, 0x5F, 0x00],
    [0x00, 0x03, 0x01, 0x5D, 0x03]]

def rotate_char_5x8_to_8x5(char_data):
    result = []
    for row in range(0, 8):  # Читаем биты с 7 по 1 (всего 7 строк)
        line = 0
        for col in reversed(range(0, 5)):  # Столбцы справа налево, чтобы не отзеркалить
            bit = ((char_data[col] >> (7 - row)) & 1)  # Читаем бит из старшего разряда
            line |=  (bit << col)  # col 0 → bit 4, col 4 → bit 0 
        result.append(line)
    return result

for i in char_data:
    rotated_V = rotate_char_5x8_to_8x5(i)
    hex_values = ", ".join(f"0x{byte:02X}" for byte in rotated_V)
    print(f"{{ {hex_values} }},")
